<?xml version="1.0" encoding="UTF-8"?>
<Module>
    <ModulePrefs
            title="Build Status"
            author="Vlastimil Elias"
            author_email="velias@redhat.com"
            description="This gadget allows to show status of defined build from Jenkins/Hudson server."
            screenshot="__ATLASSIAN_BASE_URL__/download/resources/org.jboss.jira.plugin.build-gadgets/thumbnails/screenshot.png"
            thumbnail="__ATLASSIAN_BASE_URL__/download/resources/org.jboss.jira.plugin.build-gadgets/thumbnails/thumbnail.png">
        <Require feature="views" />
        <Require feature="dynamic-height" />
        <Require feature="settitle" />
        <Require feature="setprefs"/>
        <Optional feature="atlassian.util" />
        <Optional feature="auth-refresh" />
        <Require feature="oauthpopup" />
        #supportedLocales("gadget.common,gadget.user.activity")
        #oauth
        <Optional feature="gadget-directory">
            <Param name="categories">Other</Param>
        </Optional>
    </ModulePrefs>
    <!-- All prefs are hidden because we use AJS.Gadget now which allows configuration even on JIRA 6 -->
    <UserPref name="jenkins_job_name" display_name="Jenkins/Hudson Job name" datatype="hidden" required="true" />
    <UserPref name="jenkins_url" display_name="Jenkins/Hudson server URL (default hudson.jboss.org)" datatype="hidden" default_value="http://hudson.jboss.org/hudson" />
    <UserPref name="last_job_details" display_name="Load last build details" datatype="hidden" default_value="false"/>
    <UserPref name="last_job_details_changeset" display_name="Show last build details changeset" datatype="hidden" default_value="false"/>
    <UserPref name="refreshinterval" display_name="Refresh interval" datatype="hidden" default_value="">
      <EnumValue value="" display_value="Never"/>
      <EnumValue value="1" display_value="1 minute"/>
      <EnumValue value="2" display_value="2 minutes"/>
      <EnumValue value="5" display_value="5 minutes"/>
      <EnumValue value="10" display_value="10 minutes"/>
      <EnumValue value="15" display_value="15 minutes"/>
      <EnumValue value="30" display_value="30 minutes"/>
    </UserPref>
    <UserPref name="isConfigured" datatype="hidden" default_value="false" />
    <Content type="html" view="profile,canvas,home"><![CDATA[
#requireResource("com.atlassian.jira.gadgets:common")
#requireResource("com.atlassian.gadgets.publisher:ajs-gadgets")
#includeResources()

<style type="text/css">
  #wrapper {
    margin: 5px 10px 0px 10px;
  }

  .jobtitleInner {
    margin: 0px 0px 10px 0px;
    text-align: center;
    padding: 8px 35px 8px 14px;
    text-shadow: 0 1px 0 rgba(255, 255, 255, 0.5);
    background-color: #FFFFFF;
    border: 1px solid #FFFFFF;
    -webkit-border-radius: 4px;
    -moz-border-radius: 4px;
    border-radius: 4px;
  }

  .jobtitleInner a {
    color: #000000;
    text-decoration: none;
  }
  
  .jobtitleInner a:hover {
    text-decoration: underline;
  }
    
  .statusblue, .statusblue a {
    color: #468847;
    background-color: #DFF0D8;
    border-color: #D6E9C6;
  }
  
  .statusred, .statusred a {
    color: #B94A48;
    background-color: #F2DEDE;
    border-color: #EED3D7;
  }

  .statusyellow, .statusyellow a {
    color: #C09853;
    background-color: #FCF8E3;
    border-color: #FBEED5;
  }
  
  .statusaborted, .statusaborted a {
    color: #7D7D81;
    background-color: #D5D5D5;
    border-color: #B7B7B7;
  }
    
  #jobdetails, #lastjobdetails {
    display: table;
    font-size: 12px;
    width: 100%;
  }
  
  #gupdated {
    font-size: 9px;
    color: #707070;
    width: 100%;
  }
  
  #jobdetails div {
    float: left;
    width: 33%;
    border: 0px;
    padding: 0px;
    margin: 0px;
    font-size: 12px;
  }
  
  #jobdetails a {
    color: #003366;
    text-decoration: none;
  }
  
  #jobdetails a:hover {
    text-decoration: underline;
  }
  
  ul {
    margin-top: 2px;
    margin-bottom: 0px;
  }
  
  .clear { clear: both;}
</style>
  
<div id='wrapper'>
    <div id='jobtitle' width='100%' align='center'></div>
    <div id='jobdetails' width='100%'></div>
    <div id='lastjobdetails' width='100%'></div>
    <div id='gupdated' width='100%'></div>
</div>

<script type='text/javascript'>
  var prefs = new gadgets.Prefs();

// next code is disabled as we use AJS.Gadget now to make it configurable in JIRA 6
//  function init() {
//    var jobname = prefs.getString("jenkins_job_name");
//    if (jobname && jobname.length > 0 ){
//      document.getElementById('jobtitle').innerHTML = "<div class='jobtitleInner'>"+getJobTitleHTML()+"</div>";
//      gadgets.window.setTitle("Build Status - " + prefs.getString("jenkins_job_name"));
//      gadgets.window.adjustHeight();
//      makeMainJSONRequest();
//    } else {
//      document.getElementById('jobdetails').innerHTML = "Configure Jenkins/Hudson job name in gadget preferences please. Look for job name at Jenkins/Hudson server (eg. <a target='_blank' href='http://hudson.jboss.org/hudson'>http://hudson.jboss.org/hudson</a>), job name is something like <code>as7-master-build</code> or <code>jbosstools-4.0_trunk.component--ws</code> etc.";
//      gadgets.window.adjustHeight();
//    }
//  }
//
//  gadgets.util.registerOnLoadHandler(init);
  
  function makeMainJSONRequest() {
    makeJSONRequest(getJobURL(),responseMain);
  }
  
  function makeJSONRequest(baseurl, response) {
    var params = {};
    params[gadgets.io.RequestParameters.CONTENT_TYPE] = gadgets.io.ContentType.JSON;
    var ts = new Date().getTime();
    var url = baseurl + "/api/json?nocache="+Math.floor(ts / 1000);
    gadgets.io.makeRequest(url, response, params);
  };
  
  function responseMain(obj) { 
    if (obj.data) {
      var jsondata = obj.data;
      document.getElementById('jobtitle').innerHTML = "<div width='100%' class='jobtitleInner status"+jsondata.color+"'>"+getJobTitleHTML()+"</div>";
      var html = "";
      for (var i in jsondata.healthReport){
          html = html + jsondata.healthReport[i].description + "<br/>"; 
      }
      html = html + "<div>Last build: " + getBuildHTML(jsondata.lastBuild) + "</div>";
      html = html + "<div align='center'>Last successful build: " + getBuildHTML(jsondata.lastSuccessfulBuild) + "</div>";
      html = html + "<div align='right'>Last stable build: " + getBuildHTML(jsondata.lastStableBuild) + "</div>";
      document.getElementById('jobdetails').innerHTML = html;
      if (prefs.getBool("last_job_details")){
        makeJSONRequest(getJobURL()+"/"+jsondata.lastBuild.number,responseLastBuild);
      } else {
        document.getElementById('lastjobdetails').innerHTML = "";
      }
    } else if (obj.errors && obj.errors.length > 0) {
      document.getElementById('jobdetails').innerHTML = "Build status loading error: " + obj.errors + "<br/>Response content: " + obj.text;
      document.getElementById('lastjobdetails').innerHTML = "";  
    } else {
      document.getElementById('jobdetails').innerHTML = "Build status loading error.<br/>Response content: " + obj.text;
      document.getElementById('lastjobdetails').innerHTML = "";
    }
    document.getElementById('gupdated').innerHTML = "Status updated " + dateFormat(new Date());
    var refreshinterval = prefs.getString("refreshinterval");
    if (refreshinterval && parseInt(refreshinterval) > 0){
      window.setTimeout(makeMainJSONRequest, parseInt(refreshinterval) * 60 * 1000);
    }
    gadgets.window.adjustHeight();
  };
  
  function responseLastBuild(obj) { 
    if (obj.data) {
      var jsondata = obj.data;
      var html = ""; 
      if (jsondata.timestamp)
        html = html + "Last build date: " + dateFormat(new Date(jsondata.timestamp)) + "<br/>";
      if (jsondata.duration)
        html = html + "Last build duration: " + formatDuration(jsondata.duration) + "<br/>";
      if (prefs.getBool("last_job_details_changeset") && jsondata.changeSet && jsondata.changeSet.items && jsondata.changeSet.items.length > 0){
        html = html + "Last build changeset: <ul>";
        for(item in jsondata.changeSet.items){
          html = html + "<li>" + linkKeys(jsondata.changeSet.items[item].msg);
        }
        html = html + "</ul>";
      }  
      document.getElementById('lastjobdetails').innerHTML = html;
    } else if (obj.errors && obj.errors.length > 0) {
      document.getElementById('lastjobdetails').innerHTML = "Last build info loading error: " + obj.errors + "<br/>Response content: " + obj.text;  
    } else {
      document.getElementById('lastjobdetails').innerHTML = "Last build info loading error.<br/>Response content: " + obj.text;
    }
    gadgets.window.adjustHeight();
  }
  
  function dateFormat(date) {
    return date.toLocaleString();
  };
  
  function formatDuration(millis){
    var html = "";
    var dd = new Date(millis);
    if (dd.getUTCDate()>1)
      html = html + (dd.getUTCDate()-1)+" day ";
    if (dd.getUTCHours()>0)
      html = html + dd.getUTCHours()+" hour ";
    if (dd.getUTCMinutes()>0)
      html = html + dd.getUTCMinutes()+" min ";
    html = html + dd.getUTCSeconds()+" sec";
    return html;
  }
   
  function getJobURL(){
    var surl = prefs.getString("jenkins_url");
    if (surl && surl.length > 0 ){
      if (surl.charAt(surl.length - 1) != "/")
        surl = surl + "/";
    } else {
      surl = "http://hudson.jboss.org/hudson/";
    }
    //does not work with folders in jenkins
    return surl + "job/" + prefs.getString("jenkins_job_name");
  }
   
  function getJobTitleHTML(){
     return "<strong><a href='" + getJobURL() + "' target='_blank'>" + prefs.getString("jenkins_job_name") + "</a></strong>";
  }
   
  function getBuildHTML(build){
     if (build)
       return "<a href='" + build.url + "' target='_blank'>" + build.number + "</a>";
     else
       return "--";  
  }
  
  function linkKeys(text) {

		var key_regexp = /([A-Z][A-Z|0-9]{1,20}-[0-9]+)/g;
	
		var ret = text;
		var matchArray = [];
		while (match = key_regexp.exec(text)) {
			key = match[1];
			if(! matchArray[key]){
				matchArray[key] = "y";
		    ret = replaceAll(key,"<a href='__ATLASSIAN_BASE_URL__/browse/"+key+"'>"+key+"</a>",ret)
		  }    
	  }
	  return ret;
	}
	
	function replaceAll(find, replace, str) {
	  return str.replace(new RegExp(find, 'g'), replace);
	}
  
  
  var gadget = AJS.Gadget({
    baseUrl: "__ATLASSIAN_BASE_URL__",
    useOauth: "/rest/gadget/1.0/currentUser",
    config: {
      descriptor: function(args){
        var gadget = this;
        return {
          action: "/rest/gadget/1.0/currentUser",
          theme: function ()
          {
            if (gadgets.window.getViewportDimensions().width < 450) {
              return "gdt top-label";
            } else {
              return "gdt";
            }
          }(),
          fields:[
            {
              userpref: "jenkins_url",
              label: "Jenkins URL: ",
              description: "Base URL of Jenkins or Hudson server, eg. http://hudson.jboss.org/hudson",
              type: "text",
              value: gadget.getPref("jenkins_url")
            },
            {
              userpref: "jenkins_job_name",
              label: "Jenkins Job Name: ",
              description: "Name of Job you want to show status for, eg. jbpm-6.0.x",
              type: "text",
              value: gadget.getPref("jenkins_job_name")
            },
            {
              type: "checkbox",
              label: "",
              options: [{id: 1, value: "true", label: " Show last build details"}],
              userpref: "last_job_details",
              value: gadget.getPref("last_job_details")
            },
            {
              type: "checkbox",
              label: "",
              options: [{id: 1, value: "true", label: " Show changeset info as part of last build details"}],
              userpref: "last_job_details_changeset",
              value: gadget.getPref("last_job_details_changeset")
            },
            {
              userpref: "refreshinterval",
              label: "Refresh interval",
              description: "If and how often is build status refreshed automatically.",
              type: "select",
              selected: gadget.getPref("refreshinterval"),
              options:[
                {
                  label: "Never",
                  value: ""
                },
                {
                  label: "1 minute",
                  value: "1"
                },{
                  label: "2 minutes",
                  value: "2"
                },{
                  label: "5 minutes",
                  value: "5"
                },{
                  label: "10 minutes",
                  value: "10"
                },{
                  label: "15 minutes",
                  value: "15"
                },{
                  label: "30 minutes",
                  value: "30"
                }
              ]
            },
            AJS.gadget.fields.nowConfigured()
          ]
        };
      },    
    },
    view: {
      enableReload: false,
      onResizeReload: true,
      onResizeAdjustHeight: true,
      template: function (args) {
        var gadget = this;
        var jobname = gadget.getPref("jenkins_job_name");
        if (jobname && jobname.length > 0 ){
          gadgets.window.setTitle("Build Status - " + jobname);
          document.getElementById('jobdetails').innerHTML = "Loading build status...";
          makeMainJSONRequest();
        } else {
          document.getElementById('jobtitle').innerHTML = "";
          document.getElementById('jobdetails').innerHTML = "Configure Job name using 'Edit' item in gadget's menu please.";
        }
        document.getElementById('lastjobdetails').innerHTML = "";
      },
    
    }
  });

</script>]]></Content>
</Module>
